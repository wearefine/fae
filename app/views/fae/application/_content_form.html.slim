ruby:
  require_locals(['attribute', 'f'], local_assigns)
  languages = f.object.class.fae_fields[attribute].try(:[], :languages)

- if languages.present?
  / Store original label for later gsub
  - orig_label = options[:label]
  - label = attribute.to_s.titleize

  - languages.each do |lang|
    - options.deep_merge! wrapper_html: { data: { language: lang } }
    - options[:label] = orig_label.gsub(label, "#{label} (#{lang.to_s})").html_safe

    = f.simple_fields_for "#{attribute}_#{lang}".to_sym, defaults: { wrapper_html: options[:wrapper_html] } do |i|
      - options[:input_html].merge! data: { validate: i.object.validation_json(f.object.class) }
      = i.input :content, options

- else
  = f.simple_fields_for attribute.to_sym, defaults: { wrapper_html: options[:wrapper_html] } do |i|
    - options[:input_html].merge! data: { validate: i.object.validation_json(f.object.class) }
    = i.input :content, options
